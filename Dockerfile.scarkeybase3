# based on https://github.com/keybase/bot-sshca/blob/master/docker/Dockerfile-ca

# This dockerfile builds a container capable of running the SSH CA bot.
FROM alpine AS builder

# add dependencies
RUN apk update && apk add --no-cache go curl git musl-dev gcc

# build keybase binary
WORKDIR /go
ENV GOPATH=/go
ENV KEYBASE_VERSION=5.4.0
RUN go get -d github.com/keybase/client/go/keybase
RUN cd src/github.com/keybase/client/go/keybase && git checkout v$KEYBASE_VERSION
RUN go install -tags production github.com/keybase/client/go/keybase

# build kbfsfuse binary (we won't use FUSE but the bot needs KBFS for exchanging Team config files)
RUN go install -tags production github.com/keybase/client/go/kbfs/kbfsfuse

FROM alpine

# add bash for entrypoint scripts, ssh for ssh-keygen used by the bot, sudo for stepping down to keybase user
RUN apk update && apk add --no-cache bash openssh sudo

# add the keybase user
RUN adduser -s /bin/bash -h /home/keybase -D keybase
RUN chown keybase:keybase /home/keybase

ENV HOME /tmp

COPY keybase-lambda.sh $HOME/keybase-lambda.sh
RUN chown keybase $HOME/keybase-lambda.sh
RUN chmod +x $HOME/keybase-lambda.sh

# this folder is needed for kbfsfuse
RUN mkdir /keybase && chown -R keybase:keybase /keybase

USER keybase
WORKDIR /home/keybase

# copy the keybase binaries from previous build step
COPY --from=builder --chown=keybase:keybase /go/bin/keybase /usr/local/bin/
COPY --from=builder --chown=keybase:keybase /go/bin/kbfsfuse /usr/local/bin/

USER keybase

RUN mkdir -p $HOME
RUN mkdir -p $HOME/.cache
RUN mkdir -p $HOME/.config

ENV XDG_RUNTIME_DIR $HOME
ENV XDG_CONFIG_DIR $HOME
ENV XDG_RUNTIME_USER $HOME
ENV KEYBASE_SERVICE_ARGS "-use-default-log-file"
ENV KEYBASE_KBFS_ARGS "-log-to-file -mount-type=none -mode=constrained -runtime-dir=$HOME -storage-root=$HOME"
ENV TMP $HOME

ENTRYPOINT [ "/tmp/keybase-lambda.sh" ]
